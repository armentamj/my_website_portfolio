<div class="chat-show-big light_window" data-current-user-id="<%= current_user.id %>">
  <h1 class="showcase-h1 chat-show-h1">
    <%= @chat.friend.name if @chat.user == current_user %>
  </h1>
  <div class="messages-thread">
    <%= turbo_stream_from "chat_#{@chat.id}_messages" %>
    <%= turbo_frame_tag "messages" do %>
      <% if @messages.any? %>
        <% @messages.each do |message| %>
          <%= render partial: "messages/message", locals: { message: message } %>
        <% end %>
      <% else %>
        <p class="no-messages">You have no messages from or for <%= @chat.friend.name %>.</p>
      <% end %>
    <% end %>
  </div>
  <%= form_with(model: [@chat, @message], data: { turbo_stream: true }, class: "formie") do |form| %>
    <%= form.text_area :body, placeholder: "Type your message...", class: "formie-text-area" %>
    <%= form.submit "Send", class: "formie-send csb-light", data: { disable_with: false } %>
  <% end %>
</div>
<script>
  function scrollMessagesToBottom() {
    const messages = document.querySelector(".messages-thread");
    if (messages) {
      setTimeout(() => {
        messages.scrollTop = messages.scrollHeight;
      }, 50);
    }
  }

  function decorateMessages() {
    const chatContainer = document.querySelector('.chat-show-big');
    if (!chatContainer) return;

    const currentUserId = chatContainer.dataset.currentUserId;
    if (!currentUserId) return;

    document.querySelectorAll('.messages-thread .message').forEach(messageEl => {
      const messageUserId = messageEl.dataset.userId;
      if (!messageUserId) return;

      messageEl.classList.remove('me', 'friend');

      if (messageUserId === currentUserId) {
        messageEl.classList.add('me');
      } else {
        messageEl.classList.add('friend');
      }
    });
  }

  document.addEventListener("turbo:load", () => {
    scrollMessagesToBottom();
    decorateMessages();
  });

  document.addEventListener("turbo:submit-end", () => {
    scrollMessagesToBottom();
    const input = document.querySelector(".formie-text-area");
    if (input) input.value = "";
  });

  // Scroll and decorate on new Turbo Stream append (new message)
  document.addEventListener("turbo:before-stream-render", (event) => {
    if (event.target && event.target.action === "append") {
      setTimeout(() => {
        scrollMessagesToBottom();
        decorateMessages();
      }, 10);
    }
  });
</script>
